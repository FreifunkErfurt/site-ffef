
name: build-manual 
on:
  workflow_dispatch:
   inputs:
      branch:
        description: 'Welchen Branch'     
        required: true
        default: 'nightly'
jobs:
  Configcheck:
     outputs:
       target: ${{ steps.Buildtargetmatrix.target }}
     runs-on: ubuntu-latest
     steps:
      - name: Auschecken
        uses: actions/checkout@v2.3.4
        with:
            ref: ${{ github.event.inputs.branch }}
            submodules: recursive
      - name: spellcheck
        uses: nebularg/actions-luacheck@v1.1.0
        with:
            files: site.conf
            args: --config ./gluon/.luacheckrc         
      - name: Buildtargetmatrix
        run: target=$( ln -s ../ gluon/site; cd gluon; make -s list-targets BROKEN=1  |  /bin/sed 's/$/"/' |   /bin/sed 's/^/"/' | /bin/sed ':a;N;$!ba;s/\n/,/g' );
         echo '::set-output name=target::[$(echo $target)]';echo $target       
  check_target:
    needs: Configcheck   
    steps:
         - run: echo ${{ toJSON(needs.Configcheck) }}
    runs-on: ubuntu-latest      
  build_firmware:
    needs: check_target
    strategy:
      fail-fast: false
      matrix:
        target: ${{ needs.Configcheck.outputs.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Auschecken
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.inputs.branch }}
          submodules: recursive
      - name: Permissions
        run: chmod +x contrib/actions/run-build.sh contrib/actions/install-dependencies.sh
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ${{ matrix.target }}
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target }}_logs
          path: logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target }}_output
          path: gluon/output
